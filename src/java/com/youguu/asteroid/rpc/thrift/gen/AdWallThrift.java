/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.youguu.asteroid.rpc.thrift.gen;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 模拟炒股广告墙
 */
public class AdWallThrift implements org.apache.thrift.TBase<AdWallThrift, AdWallThrift._Fields>, java.io.Serializable, Cloneable, Comparable<AdWallThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdWallThrift");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField FORWARD_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("forwardUrl", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField BEGIN_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("beginDate", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("endDate", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField AD_IMAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("adImage", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField POSITION_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("positionType", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CONTENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("contentType", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("content", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField RANK_FIELD_DESC = new org.apache.thrift.protocol.TField("rank", org.apache.thrift.protocol.TType.I32, (short)11);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AdWallThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AdWallThriftTupleSchemeFactory());
  }

  public int id; // required
  public String title; // required
  public String forwardUrl; // required
  public long beginDate; // required
  public long endDate; // required
  public String adImage; // required
  public String positionType; // required
  public String contentType; // required
  public String content; // required
  public long createTime; // required
  public int rank; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    TITLE((short)2, "title"),
    FORWARD_URL((short)3, "forwardUrl"),
    BEGIN_DATE((short)4, "beginDate"),
    END_DATE((short)5, "endDate"),
    AD_IMAGE((short)6, "adImage"),
    POSITION_TYPE((short)7, "positionType"),
    CONTENT_TYPE((short)8, "contentType"),
    CONTENT((short)9, "content"),
    CREATE_TIME((short)10, "createTime"),
    RANK((short)11, "rank");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // TITLE
          return TITLE;
        case 3: // FORWARD_URL
          return FORWARD_URL;
        case 4: // BEGIN_DATE
          return BEGIN_DATE;
        case 5: // END_DATE
          return END_DATE;
        case 6: // AD_IMAGE
          return AD_IMAGE;
        case 7: // POSITION_TYPE
          return POSITION_TYPE;
        case 8: // CONTENT_TYPE
          return CONTENT_TYPE;
        case 9: // CONTENT
          return CONTENT;
        case 10: // CREATE_TIME
          return CREATE_TIME;
        case 11: // RANK
          return RANK;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __BEGINDATE_ISSET_ID = 1;
  private static final int __ENDDATE_ISSET_ID = 2;
  private static final int __CREATETIME_ISSET_ID = 3;
  private static final int __RANK_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FORWARD_URL, new org.apache.thrift.meta_data.FieldMetaData("forwardUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BEGIN_DATE, new org.apache.thrift.meta_data.FieldMetaData("beginDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_DATE, new org.apache.thrift.meta_data.FieldMetaData("endDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AD_IMAGE, new org.apache.thrift.meta_data.FieldMetaData("adImage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POSITION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("positionType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("contentType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTENT, new org.apache.thrift.meta_data.FieldMetaData("content", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RANK, new org.apache.thrift.meta_data.FieldMetaData("rank", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdWallThrift.class, metaDataMap);
  }

  public AdWallThrift() {
  }

  public AdWallThrift(
    int id,
    String title,
    String forwardUrl,
    long beginDate,
    long endDate,
    String adImage,
    String positionType,
    String contentType,
    String content,
    long createTime,
    int rank)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.title = title;
    this.forwardUrl = forwardUrl;
    this.beginDate = beginDate;
    setBeginDateIsSet(true);
    this.endDate = endDate;
    setEndDateIsSet(true);
    this.adImage = adImage;
    this.positionType = positionType;
    this.contentType = contentType;
    this.content = content;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.rank = rank;
    setRankIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AdWallThrift(AdWallThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetForwardUrl()) {
      this.forwardUrl = other.forwardUrl;
    }
    this.beginDate = other.beginDate;
    this.endDate = other.endDate;
    if (other.isSetAdImage()) {
      this.adImage = other.adImage;
    }
    if (other.isSetPositionType()) {
      this.positionType = other.positionType;
    }
    if (other.isSetContentType()) {
      this.contentType = other.contentType;
    }
    if (other.isSetContent()) {
      this.content = other.content;
    }
    this.createTime = other.createTime;
    this.rank = other.rank;
  }

  public AdWallThrift deepCopy() {
    return new AdWallThrift(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.title = null;
    this.forwardUrl = null;
    setBeginDateIsSet(false);
    this.beginDate = 0;
    setEndDateIsSet(false);
    this.endDate = 0;
    this.adImage = null;
    this.positionType = null;
    this.contentType = null;
    this.content = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setRankIsSet(false);
    this.rank = 0;
  }

  public int getId() {
    return this.id;
  }

  public AdWallThrift setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getTitle() {
    return this.title;
  }

  public AdWallThrift setTitle(String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public String getForwardUrl() {
    return this.forwardUrl;
  }

  public AdWallThrift setForwardUrl(String forwardUrl) {
    this.forwardUrl = forwardUrl;
    return this;
  }

  public void unsetForwardUrl() {
    this.forwardUrl = null;
  }

  /** Returns true if field forwardUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetForwardUrl() {
    return this.forwardUrl != null;
  }

  public void setForwardUrlIsSet(boolean value) {
    if (!value) {
      this.forwardUrl = null;
    }
  }

  public long getBeginDate() {
    return this.beginDate;
  }

  public AdWallThrift setBeginDate(long beginDate) {
    this.beginDate = beginDate;
    setBeginDateIsSet(true);
    return this;
  }

  public void unsetBeginDate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BEGINDATE_ISSET_ID);
  }

  /** Returns true if field beginDate is set (has been assigned a value) and false otherwise */
  public boolean isSetBeginDate() {
    return EncodingUtils.testBit(__isset_bitfield, __BEGINDATE_ISSET_ID);
  }

  public void setBeginDateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BEGINDATE_ISSET_ID, value);
  }

  public long getEndDate() {
    return this.endDate;
  }

  public AdWallThrift setEndDate(long endDate) {
    this.endDate = endDate;
    setEndDateIsSet(true);
    return this;
  }

  public void unsetEndDate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENDDATE_ISSET_ID);
  }

  /** Returns true if field endDate is set (has been assigned a value) and false otherwise */
  public boolean isSetEndDate() {
    return EncodingUtils.testBit(__isset_bitfield, __ENDDATE_ISSET_ID);
  }

  public void setEndDateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENDDATE_ISSET_ID, value);
  }

  public String getAdImage() {
    return this.adImage;
  }

  public AdWallThrift setAdImage(String adImage) {
    this.adImage = adImage;
    return this;
  }

  public void unsetAdImage() {
    this.adImage = null;
  }

  /** Returns true if field adImage is set (has been assigned a value) and false otherwise */
  public boolean isSetAdImage() {
    return this.adImage != null;
  }

  public void setAdImageIsSet(boolean value) {
    if (!value) {
      this.adImage = null;
    }
  }

  public String getPositionType() {
    return this.positionType;
  }

  public AdWallThrift setPositionType(String positionType) {
    this.positionType = positionType;
    return this;
  }

  public void unsetPositionType() {
    this.positionType = null;
  }

  /** Returns true if field positionType is set (has been assigned a value) and false otherwise */
  public boolean isSetPositionType() {
    return this.positionType != null;
  }

  public void setPositionTypeIsSet(boolean value) {
    if (!value) {
      this.positionType = null;
    }
  }

  public String getContentType() {
    return this.contentType;
  }

  public AdWallThrift setContentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

  public void unsetContentType() {
    this.contentType = null;
  }

  /** Returns true if field contentType is set (has been assigned a value) and false otherwise */
  public boolean isSetContentType() {
    return this.contentType != null;
  }

  public void setContentTypeIsSet(boolean value) {
    if (!value) {
      this.contentType = null;
    }
  }

  public String getContent() {
    return this.content;
  }

  public AdWallThrift setContent(String content) {
    this.content = content;
    return this;
  }

  public void unsetContent() {
    this.content = null;
  }

  /** Returns true if field content is set (has been assigned a value) and false otherwise */
  public boolean isSetContent() {
    return this.content != null;
  }

  public void setContentIsSet(boolean value) {
    if (!value) {
      this.content = null;
    }
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public AdWallThrift setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public int getRank() {
    return this.rank;
  }

  public AdWallThrift setRank(int rank) {
    this.rank = rank;
    setRankIsSet(true);
    return this;
  }

  public void unsetRank() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RANK_ISSET_ID);
  }

  /** Returns true if field rank is set (has been assigned a value) and false otherwise */
  public boolean isSetRank() {
    return EncodingUtils.testBit(__isset_bitfield, __RANK_ISSET_ID);
  }

  public void setRankIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RANK_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((String)value);
      }
      break;

    case FORWARD_URL:
      if (value == null) {
        unsetForwardUrl();
      } else {
        setForwardUrl((String)value);
      }
      break;

    case BEGIN_DATE:
      if (value == null) {
        unsetBeginDate();
      } else {
        setBeginDate((Long)value);
      }
      break;

    case END_DATE:
      if (value == null) {
        unsetEndDate();
      } else {
        setEndDate((Long)value);
      }
      break;

    case AD_IMAGE:
      if (value == null) {
        unsetAdImage();
      } else {
        setAdImage((String)value);
      }
      break;

    case POSITION_TYPE:
      if (value == null) {
        unsetPositionType();
      } else {
        setPositionType((String)value);
      }
      break;

    case CONTENT_TYPE:
      if (value == null) {
        unsetContentType();
      } else {
        setContentType((String)value);
      }
      break;

    case CONTENT:
      if (value == null) {
        unsetContent();
      } else {
        setContent((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case RANK:
      if (value == null) {
        unsetRank();
      } else {
        setRank((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Integer.valueOf(getId());

    case TITLE:
      return getTitle();

    case FORWARD_URL:
      return getForwardUrl();

    case BEGIN_DATE:
      return Long.valueOf(getBeginDate());

    case END_DATE:
      return Long.valueOf(getEndDate());

    case AD_IMAGE:
      return getAdImage();

    case POSITION_TYPE:
      return getPositionType();

    case CONTENT_TYPE:
      return getContentType();

    case CONTENT:
      return getContent();

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case RANK:
      return Integer.valueOf(getRank());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case TITLE:
      return isSetTitle();
    case FORWARD_URL:
      return isSetForwardUrl();
    case BEGIN_DATE:
      return isSetBeginDate();
    case END_DATE:
      return isSetEndDate();
    case AD_IMAGE:
      return isSetAdImage();
    case POSITION_TYPE:
      return isSetPositionType();
    case CONTENT_TYPE:
      return isSetContentType();
    case CONTENT:
      return isSetContent();
    case CREATE_TIME:
      return isSetCreateTime();
    case RANK:
      return isSetRank();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AdWallThrift)
      return this.equals((AdWallThrift)that);
    return false;
  }

  public boolean equals(AdWallThrift that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_forwardUrl = true && this.isSetForwardUrl();
    boolean that_present_forwardUrl = true && that.isSetForwardUrl();
    if (this_present_forwardUrl || that_present_forwardUrl) {
      if (!(this_present_forwardUrl && that_present_forwardUrl))
        return false;
      if (!this.forwardUrl.equals(that.forwardUrl))
        return false;
    }

    boolean this_present_beginDate = true;
    boolean that_present_beginDate = true;
    if (this_present_beginDate || that_present_beginDate) {
      if (!(this_present_beginDate && that_present_beginDate))
        return false;
      if (this.beginDate != that.beginDate)
        return false;
    }

    boolean this_present_endDate = true;
    boolean that_present_endDate = true;
    if (this_present_endDate || that_present_endDate) {
      if (!(this_present_endDate && that_present_endDate))
        return false;
      if (this.endDate != that.endDate)
        return false;
    }

    boolean this_present_adImage = true && this.isSetAdImage();
    boolean that_present_adImage = true && that.isSetAdImage();
    if (this_present_adImage || that_present_adImage) {
      if (!(this_present_adImage && that_present_adImage))
        return false;
      if (!this.adImage.equals(that.adImage))
        return false;
    }

    boolean this_present_positionType = true && this.isSetPositionType();
    boolean that_present_positionType = true && that.isSetPositionType();
    if (this_present_positionType || that_present_positionType) {
      if (!(this_present_positionType && that_present_positionType))
        return false;
      if (!this.positionType.equals(that.positionType))
        return false;
    }

    boolean this_present_contentType = true && this.isSetContentType();
    boolean that_present_contentType = true && that.isSetContentType();
    if (this_present_contentType || that_present_contentType) {
      if (!(this_present_contentType && that_present_contentType))
        return false;
      if (!this.contentType.equals(that.contentType))
        return false;
    }

    boolean this_present_content = true && this.isSetContent();
    boolean that_present_content = true && that.isSetContent();
    if (this_present_content || that_present_content) {
      if (!(this_present_content && that_present_content))
        return false;
      if (!this.content.equals(that.content))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_rank = true;
    boolean that_present_rank = true;
    if (this_present_rank || that_present_rank) {
      if (!(this_present_rank && that_present_rank))
        return false;
      if (this.rank != that.rank)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(AdWallThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetForwardUrl()).compareTo(other.isSetForwardUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetForwardUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.forwardUrl, other.forwardUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBeginDate()).compareTo(other.isSetBeginDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBeginDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.beginDate, other.beginDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndDate()).compareTo(other.isSetEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endDate, other.endDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdImage()).compareTo(other.isSetAdImage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdImage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adImage, other.adImage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPositionType()).compareTo(other.isSetPositionType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPositionType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.positionType, other.positionType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContentType()).compareTo(other.isSetContentType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContentType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contentType, other.contentType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContent()).compareTo(other.isSetContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.content, other.content);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRank()).compareTo(other.isSetRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rank, other.rank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AdWallThrift(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("forwardUrl:");
    if (this.forwardUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.forwardUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("beginDate:");
    sb.append(this.beginDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endDate:");
    sb.append(this.endDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("adImage:");
    if (this.adImage == null) {
      sb.append("null");
    } else {
      sb.append(this.adImage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("positionType:");
    if (this.positionType == null) {
      sb.append("null");
    } else {
      sb.append(this.positionType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contentType:");
    if (this.contentType == null) {
      sb.append("null");
    } else {
      sb.append(this.contentType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("content:");
    if (this.content == null) {
      sb.append("null");
    } else {
      sb.append(this.content);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rank:");
    sb.append(this.rank);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AdWallThriftStandardSchemeFactory implements SchemeFactory {
    public AdWallThriftStandardScheme getScheme() {
      return new AdWallThriftStandardScheme();
    }
  }

  private static class AdWallThriftStandardScheme extends StandardScheme<AdWallThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AdWallThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FORWARD_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.forwardUrl = iprot.readString();
              struct.setForwardUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BEGIN_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.beginDate = iprot.readI64();
              struct.setBeginDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endDate = iprot.readI64();
              struct.setEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // AD_IMAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.adImage = iprot.readString();
              struct.setAdImageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // POSITION_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.positionType = iprot.readString();
              struct.setPositionTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CONTENT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contentType = iprot.readString();
              struct.setContentTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.content = iprot.readString();
              struct.setContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // RANK
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rank = iprot.readI32();
              struct.setRankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AdWallThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.forwardUrl != null) {
        oprot.writeFieldBegin(FORWARD_URL_FIELD_DESC);
        oprot.writeString(struct.forwardUrl);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BEGIN_DATE_FIELD_DESC);
      oprot.writeI64(struct.beginDate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_DATE_FIELD_DESC);
      oprot.writeI64(struct.endDate);
      oprot.writeFieldEnd();
      if (struct.adImage != null) {
        oprot.writeFieldBegin(AD_IMAGE_FIELD_DESC);
        oprot.writeString(struct.adImage);
        oprot.writeFieldEnd();
      }
      if (struct.positionType != null) {
        oprot.writeFieldBegin(POSITION_TYPE_FIELD_DESC);
        oprot.writeString(struct.positionType);
        oprot.writeFieldEnd();
      }
      if (struct.contentType != null) {
        oprot.writeFieldBegin(CONTENT_TYPE_FIELD_DESC);
        oprot.writeString(struct.contentType);
        oprot.writeFieldEnd();
      }
      if (struct.content != null) {
        oprot.writeFieldBegin(CONTENT_FIELD_DESC);
        oprot.writeString(struct.content);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RANK_FIELD_DESC);
      oprot.writeI32(struct.rank);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AdWallThriftTupleSchemeFactory implements SchemeFactory {
    public AdWallThriftTupleScheme getScheme() {
      return new AdWallThriftTupleScheme();
    }
  }

  private static class AdWallThriftTupleScheme extends TupleScheme<AdWallThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AdWallThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetTitle()) {
        optionals.set(1);
      }
      if (struct.isSetForwardUrl()) {
        optionals.set(2);
      }
      if (struct.isSetBeginDate()) {
        optionals.set(3);
      }
      if (struct.isSetEndDate()) {
        optionals.set(4);
      }
      if (struct.isSetAdImage()) {
        optionals.set(5);
      }
      if (struct.isSetPositionType()) {
        optionals.set(6);
      }
      if (struct.isSetContentType()) {
        optionals.set(7);
      }
      if (struct.isSetContent()) {
        optionals.set(8);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(9);
      }
      if (struct.isSetRank()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetForwardUrl()) {
        oprot.writeString(struct.forwardUrl);
      }
      if (struct.isSetBeginDate()) {
        oprot.writeI64(struct.beginDate);
      }
      if (struct.isSetEndDate()) {
        oprot.writeI64(struct.endDate);
      }
      if (struct.isSetAdImage()) {
        oprot.writeString(struct.adImage);
      }
      if (struct.isSetPositionType()) {
        oprot.writeString(struct.positionType);
      }
      if (struct.isSetContentType()) {
        oprot.writeString(struct.contentType);
      }
      if (struct.isSetContent()) {
        oprot.writeString(struct.content);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetRank()) {
        oprot.writeI32(struct.rank);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AdWallThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(2)) {
        struct.forwardUrl = iprot.readString();
        struct.setForwardUrlIsSet(true);
      }
      if (incoming.get(3)) {
        struct.beginDate = iprot.readI64();
        struct.setBeginDateIsSet(true);
      }
      if (incoming.get(4)) {
        struct.endDate = iprot.readI64();
        struct.setEndDateIsSet(true);
      }
      if (incoming.get(5)) {
        struct.adImage = iprot.readString();
        struct.setAdImageIsSet(true);
      }
      if (incoming.get(6)) {
        struct.positionType = iprot.readString();
        struct.setPositionTypeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.contentType = iprot.readString();
        struct.setContentTypeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.content = iprot.readString();
        struct.setContentIsSet(true);
      }
      if (incoming.get(9)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.rank = iprot.readI32();
        struct.setRankIsSet(true);
      }
    }
  }

}

